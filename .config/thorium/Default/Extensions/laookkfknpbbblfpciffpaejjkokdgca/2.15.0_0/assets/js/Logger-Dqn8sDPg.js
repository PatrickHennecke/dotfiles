import{e}from"./environmentVariables-Cy83xda0.js";async function t({method:e,url:t,data:s,headers:n}){const r=await fetch(t,{method:e,headers:n,body:"Object"===(null==s?void 0:s.constructor.name)?JSON.stringify(s):s}).catch((()=>({statusText:"No response from the server"}))),{status:o,headers:a,statusText:i}=r,c={status:o,headers:(null==a?void 0:a.entries)&&Object.fromEntries(a)||{},statusText:i};if(r.ok){const e=await r.text();return e&&(c.data=JSON.parse(e)),c}{let n="%c Request Error: "+(o||"");return i&&(n+=(o?" : ":"")+i),console.groupCollapsed(n,"color: #ff0505"),console.log("Request:",{method:e,url:t,data:s}),console.log("Response:",r),console.groupEnd(),c}}function s(e){return e>=200&&e<300}const n="store",r="_key",o="_value";function a(e){return"object"==typeof e&&null!==e&&r in e&&o in e}class i{constructor(e,t){this.name="keyValueDb:"+e,this.version=10*t,this.database=null}get db(){return this.database?Promise.resolve(this.database):this.open().then((e=>this.database=e))}open(){return new Promise(((e,t)=>{const s=indexedDB.open(this.name,this.version);s.onerror=()=>t(s.error),s.onupgradeneeded=()=>{s.result.createObjectStore(n,{keyPath:r})},s.onsuccess=()=>{const t=s.result;t.onversionchange=()=>{t.close(),this.database=null},e(t)}}))}async bulkPatch(e){const t={};for(const s in e){const n=e[s];n&&(t[s]=await this.patch(s,n))}return t}async patch(e,t){const s=await this.get(e);if("object"!=typeof s)throw new Error(`KeyValueDb:${this.name} Error: patch called on ${typeof s} value. Patch may only be called on objects or empty rows. Key: ${e}, Existing Value: ${String(s)}`);const n=Object.assign({},s||{},t),a={[r]:e,[o]:n};return await this.transaction("readwrite",(e=>e.put(a))),{newValue:n,previousValue:s}}set(e,t){const s={[r]:e,[o]:t};return this.transaction("readwrite",(e=>e.put(s)))}async get(e){const t=await this.transaction("readonly",(t=>t.get(e)));return t&&a(t)?t[o]:null}async transaction(e,t){const s=await this.db;return new Promise(((o,i)=>{const c=s.transaction([n],e);c.onerror=()=>i(l.error);const l=t(c.objectStore(n));l.onsuccess=()=>{const e=l.result;if(!function(e){return void 0===e||"string"==typeof e||a(e)}(e))throw new Error(`Transaction result does not match schema (does not contain a property matching ${r})`);o(e)}}))}}const c=new i("misc",1),l="https://api.momentumdash.com/";let u=null,d=null;async function h(s){return u||(d?await d:(d=t({url:l+"config",headers:{"X-Momentum-Version":e.version}}).then((({data:e})=>{if(!e)throw"Request for config from API failed";return e})).catch((e=>(console.error(e),c.get("config").then((e=>e||{}))))),u=await d,u&&await c.set("config",u))),function(e,t){return t?t.split(".").reduce(((e,t)=>null==e?void 0:e[t]),e):e}(u,s)}const m=e.version,g=e.environment,f="extension",p=new URL(`https://browser-http-intake.logs.datadoghq.com/v1/input/pub18ef9128dd80db1a80dfc3f9180b55b5?ddsource=browser&ddtags=${encodeURIComponent(`env:${g},service:${f},version:${m}`)}`).toString();class b{constructor(e,t=1e-5){this.name=e,this.defaultSampleRate=t,this.sampleRate=null}warn(e,t){return this._log(e,t,"warn")}error(e,t){return this._log(e,t,"error")}info(e,t){return this._log(e,t,"info")}async _log(...e){if(!(await this._isEligibleForSubmission()))return;const[s,n,r]=this._parseArgs(e),o={status:r,date:Date.now(),service:f,message:s,_logger:this.name,...n};this.tabId&&(o.tabId=this.tabId),await t({method:"POST",url:p,data:o})}_convertUndefinedPropertiesToStrings(e){const t={};for(const[s,n]of Object.entries(e))t[s]=void 0===n?"<undefined>":n;return t}_parseArgs(e){let[t,s={},n]=e;if(s||"object"!=typeof t||(s=t,t=s.message),s instanceof ErrorEvent&&(s=s.error),s instanceof Error){const{name:e,stack:t}=s;s={name:e,errorMessage:s.message,stack:t}}else"string"==typeof s?(t=`${t}: ${s}`,s={}):"string"==typeof t&&s.message&&(s.message=`${t}: ${s.message}`);return s=this._convertUndefinedPropertiesToStrings(s),[t,s,n]}async _isEligibleForSubmission(){return null===this.sampleRate&&(this.sampleRate=await this._getSampleRate()),Math.random()<=this.sampleRate}async _getSampleRate(){const{datadogLoggingSamplingRate:e}=await h();return e?this.name.split(".").reduce(((t,s,n,r)=>{const o=r.slice(0,n+1).join(".");return o in e?e[o]:t}),this.defaultSampleRate):this.defaultSampleRate}}const w=Object.freeze(Object.defineProperty({__proto__:null,default:b},Symbol.toStringTag,{value:"Module"}));export{i as K,b as L,w as a,h as g,s as i,c as m,t as r};