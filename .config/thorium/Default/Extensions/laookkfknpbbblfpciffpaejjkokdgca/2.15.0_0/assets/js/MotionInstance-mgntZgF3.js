import{g as e}from"./FlashMessage-BSLh5HLJ.js";import"./promisifiedChrome-CheD9WtZ.js";import"./timestampDb-sTUCijT1.js";import"./Logger-Dqn8sDPg.js";import"./environmentVariables-Cy83xda0.js";import"./ResizeSensor-CXS_pGRc.js";import"./preload-helper-D7CfCCEq.js";import"./string-KTo4Qfpe.js";import"./icon-close-BUGl_M7j.js";class t{constructor(e,t){this._handleMotionChange=e=>{const t=this._container,r=t.actualOptions.motion;r&&(e.matches?r.disable?t.retina.reduceFactor=0:t.retina.reduceFactor=r.reduce.value?1/r.reduce.factor:1:t.retina.reduceFactor=1)},this._container=e,this._engine=t}async init(){const t=this._container,r=t.actualOptions.motion;if(!r||!r.disable&&!r.reduce.value)return void(t.retina.reduceFactor=1);const i=e("(prefers-reduced-motion: reduce)");if(!i)return void(t.retina.reduceFactor=1);this._handleMotionChange(i);const o=()=>{(async()=>{this._handleMotionChange(i);try{await t.refresh()}catch{}})()};void 0!==i.addEventListener?i.addEventListener("change",o):void 0!==i.addListener&&i.addListener(o),await Promise.resolve()}}export{t as MotionInstance};