import{V as e}from"./ResizeSensor-CXS_pGRc.js";const t=new(e.extend({name:"GlobalKeyEventManager",data:()=>({events:{}}),methods:{registerEventListener(e,t,s,n){Object.prototype.hasOwnProperty.call(this.events,t)?Object.prototype.hasOwnProperty.call(this.events[t],s)||(this.events[t][s]=[]):(this.events[t]={},this.events[t][s]=[],this._addListener(t)),this.events[t][s].push({id:e,handler:n})},hasEventListener(e,t,s,n=!1){if(!Object.prototype.hasOwnProperty.call(this.events,t))return m.utils.isDev()&&n&&console.warn(`No event listeners registered with event type: ${t} to remove`),!1;if(!Object.prototype.hasOwnProperty.call(this.events[t],s))return m.utils.isDev()&&n&&console.warn(`No event listeners registered with keyCode: ${s} to remove`),!1;const r=this._getIndexOfEventId(e,t,s);return-1===r?(m.utils.isDev()&&n&&console.warn(`No event listeners registered with id: ${e} to remove`),!1):r},removeEventListener(e,t,s){if(!this.hasEventListener(e,t,s,!0))return;const n=this._getIndexOfEventId(e,t,s);this.events[t][s].splice(n,1),this._cleanupIfEmpty(t,s)},_cleanupIfEmpty(e,t){this.events[e][t].length||delete this.events[e][t],Object.keys(this.events[e]).length||(delete this.events[e],this._removeListener(e))},_addListener(e){window.addEventListener(e,this._eventRouter)},_removeListener(e){window.removeEventListener(e,this._eventRouter)},_eventRouter(e){if(m.tourActive)return;if(!Object.prototype.hasOwnProperty.call(this.events,e.type))return;if(!Object.prototype.hasOwnProperty.call(this.events[e.type],e.keyCode))return;let t=this.events[e.type][e.keyCode];t[t.length-1].handler(e)},_getIndexOfEventId(e,t,s){return this.events[t][s].findIndex((t=>t.id===e))}}}));export{t as g};