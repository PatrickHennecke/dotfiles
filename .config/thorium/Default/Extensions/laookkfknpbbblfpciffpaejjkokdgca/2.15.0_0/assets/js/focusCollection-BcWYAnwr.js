import"./VueBase-CjPGMLuv.js";import{i as t,b as e,m as o}from"./itemModelMixin-BHakSWl-.js";import{V as i}from"./ResizeSensor-CXS_pGRc.js";import{p as a}from"./reactiveCustomization-CrL2eTrh.js";import{f as s,u as d,A as c}from"./promisifiedChrome-CheD9WtZ.js";import{M as n}from"./timestampDb-sTUCijT1.js";import"./dashboard-CF_jRhAY.js";import"./main--IJuvtTE.js";import"./localStorage-B4mFdj8F.js";import"./preload-helper-D7CfCCEq.js";import"./Logger-Dqn8sDPg.js";import"./environmentVariables-Cy83xda0.js";import"./migrateLegacyUserMessageHandler-CU6TUnqH.js";import"./index-CJJH83pl.js";import"./namesMixin-EAvqmdCw.js";import"./string-KTo4Qfpe.js";const l=i.extend({name:"FocusModel",mixins:[t],data:()=>({id:null,archived:!1,completed:!1,createdDate:m.now(),focus:null,forDate:null,todoId:null,props:["focus","completed","archived","forDate","createdDate","todoId"]}),methods:{updateData(e){t.methods.updateData.call(this,e),this.completed=!!e.completed}}}),u=new(i.extend({name:"AutoFocusManager",data:()=>({activeFocus:null,loaded:!1,loading:!1}),computed:{autoFocusEnabled:()=>a.autoFocus&&m.conditionalFeatures.featureEnabled("pinfocus")},watch:{autoFocusEnabled:{async handler(t){t?(this.loaded||this.loading||await this.getInitialLoadedState(),this.getTopTodo().then((t=>this.activeFocus=this.createFocusFromTodo(t)))):this.activeFocus=null},immediate:!0},"activeFocus.focus"(t){this.activeFocus&&m.trigger("todo:set:title",this.activeFocus.todoId,t)}},created(){m.on("todo:globalChange",this.onTodoChange),m.on("todo:loadingStateChange",this.onLoadingStateChange),m.on("todo:activeListLoaded",this.setLoaded)},destroyed(){m.off("todo:globalChange",this.onTodoChange),m.off("todo:loadingStateChange",this.onLoadingStateChange),m.off("todo:activeListLoaded",this.setLoaded)},methods:{getInitialLoadedState(){return this.loading=!0,m.widgetManager.getWidgetAsync("todo").then((t=>{var e,o;"Done"===(null==(o=null==(e=t.manager.activeProvider.selectedList())?void 0:e.itemCollection)?void 0:o.listStatus)&&this.setLoaded()}))},setLoaded(){this.loading=!1,this.loaded=!0},toggleComplete(){this.activeFocus&&(this.activeFocus.completed=!this.activeFocus.completed,m.trigger("todo:set:done",this.activeFocus.todoId,this.activeFocus.completed))},onLoadingStateChange(){this.autoFocusEnabled&&this.getTopTodo().then((t=>{var e;!t||this.activeFocus&&(t.get("id")||t.id)===this.activeFocus.todoId?t||(null==(e=this.activeFocus)?void 0:e.completed)||(this.activeFocus=null):this.activeFocus=this.createFocusFromTodo(t)}))},getTopTodo:()=>m.widgetManager.getWidgetAsync("todo").then((t=>t.getTopTodo())),onTodoChange(...t){var e,o,i,a,s;const d=t[0];if(t.find((t=>t&&(t.ignoreRender||t.silent)))||!this.autoFocusEnabled||!(null==d?void 0:d.changed)||!Object.keys(d.changed).length||!1===(null==(e=d.changed)?void 0:e.isLoading))return;const c=(null==(o=d.changed)?void 0:o.completedDate)||(null==(i=d.changed)?void 0:i.modifiedServer)||(null==(s=null==(a=null==d?void 0:d.changed)?void 0:a.changed_props)?void 0:s.includes("completedDate"));this.getTopTodo().then((t=>{var e,o;t?this.activeFocus=this.createFocusFromTodo(t):(null==(e=this.activeFocus)?void 0:e.todoId)&&(d.get("id")||d.id).includes(null==(o=this.activeFocus)?void 0:o.todoId)&&(this.activeFocus.completed=d.get("done"),c||(this.activeFocus=null))}))},createFocusFromTodo(t){if(!t)return null;let e=new l;return e.updateData({focus:t.get("title"),archived:!1,completed:t.get("done"),createdDate:m.now(),id:m.utils.uuidv4(),todoId:t.get("id")||t.id,forDate:m.utils.getDateString()}),e}}}));class r{constructor(t){this.dataService=t}get(t){this.dataService.get(t)}add(t,e){return this.dataService.create(t,e)}update(t,e){return this.dataService.update(t,e)}delete(t){return this.dataService.delete(t)}refresh(){return this.dataService.refresh()}}const h=new(i.extend({name:"FocusCollection",mixins:[e,o],unreactive:()=>({type:"focus",Model:l,dataService:new r(new s("focus",{mode:d.userIsLegacyUnregistered()?n.Cache:n.Timestamp})),newModel:null,analytics:new c({feature:"focus"})}),computed:{emptyFocus(){return!this.activeFocus.focus},activeFocusInCollection(){const t=d.getDateString(),e=Object.values(this.data.items).filter((e=>!e.archived&&e.forDate===t)).sort(((t,e)=>e.createdDate-t.createdDate));return e.length?e[0]:null},activeFocus(){return u.activeFocus||this.activeFocusInCollection||this.newModel},loaded(){return(!u.autoFocusEnabled||u.loaded)&&this.data.loaded}},created(){this.instantiateNewModel(),m.on("focus:pin",this.onFocusPin),m.on("todo:globalChange",this.onTodoChange),m.on("newDay",this.archiveAll)},destroyed(){m.off("focus:pin",this.onFocusPin),m.off("todo:globalChange",this.onTodoChange),m.off("newDay",this.archiveAll)},methods:{instantiateNewModel(){this.newModel=new this.Model,this.newModel.copyProperties()},async save(){const t=this.emptyFocus;u.activeFocus||this.activeFocus.editProps.focus&&await this[this.emptyFocus?"add":"update"](this.activeFocus),t&&this.instantiateNewModel(),(this.activeFocus.focus||this.activeFocus.editProps.focus)&&this.analytics.capture("focus "+(t?"add":"edit"),{position:localStorage.getItem("pomodoro-showing")?"pomodoro":"default"}),this.activeFocus.commitChanges(),this.activeFocus.todoId&&m.trigger("todo:set:title",this.activeFocus.todoId,this.activeFocus.focus)},archive(){this.analytics.capture("focus clear",{completed:this.activeFocus.completed}),u.activeFocus?a.autoFocus=!1:this.activeFocus.id&&e.methods.archive.call(this,this.activeFocus)},archiveAll(){Object.values(this.data.items).forEach((t=>this.archive(t)))},toggleComplete(){const t=this.activeFocus.completed;this.analytics.capture("focus "+(t?"uncomplete":"complete"),Object.assign({position:localStorage.getItem("pomodoro-showing")?"pomodoro":"default"},t?{}:{autofocus:u.autoFocusEnabled})),!u.activeFocus&&this.activeFocus.id?(this.activeFocus.completed=!t,this.dataService.update(this.activeFocus.id,{completed:!t}).then((()=>{this.activeFocus.todoId&&m.trigger("todo:set:done",this.activeFocus.todoId,!t)})).catch((e=>{throw this.activeFocus.completed=t,e}))):u.toggleComplete()},onFocusPin(t){a.autoFocus=!1;let e=u.createFocusFromTodo(t);e&&e.focus&&(e.copyProperties(),this.add(e))},onTodoChange(...t){var e,o;const i=t[0];if(t.find((t=>t&&(t.ignoreRender||t.silent)))||!this.activeFocus||!Object.keys(this.data.items).length||!(null==i?void 0:i.changed))return;let a=Object.values(this.data.items).find((t=>{var e;return t.todoId&&t.todoId===((null==(e=i.get)?void 0:e.call(i,"id"))||(null==i?void 0:i.id))}));if(!a)return;if(null==(o=null==(e=t[0])?void 0:e.changed)?void 0:o.deleted)return void this.archive();const s=i.get("done"),d=i.get("title");a.completed===s&&a.focus===d||(a.completed=s,a.focus=d,this.dataService.update(a.id,{completed:s,focus:d}))}}}));export{h as default};