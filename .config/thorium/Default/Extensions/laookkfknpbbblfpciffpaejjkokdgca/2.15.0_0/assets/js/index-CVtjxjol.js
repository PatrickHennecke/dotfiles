import{t as e,o as t,q as r,r as n,v as o,x as s,y as a}from"./dashboard-CF_jRhAY.js";import{V as i,j as u,r as l,w as v,k as c,o as d}from"./ResizeSensor-CXS_pGRc.js";function f(t){var r;const n=e(t);return null!=(r=null==n?void 0:n.$el)?r:n}i.util.warn;const p=o?window:void 0;function m(...t){let o,s,i,u;if("string"==typeof t[0]||Array.isArray(t[0])?([s,i,u]=t,o=p):[o,s,i,u]=t,!o)return r;Array.isArray(s)||(s=[s]),Array.isArray(i)||(i=[i]);const l=[],c=()=>{l.forEach((e=>e())),l.length=0},d=v((()=>[f(o),e(u)]),(([e,t])=>{if(c(),!e)return;const r=a(t)?{...t}:t;l.push(...s.flatMap((t=>i.map((n=>((e,t,r,n)=>(e.addEventListener(t,r,n),()=>e.removeEventListener(t,r,n)))(e,t,n,r))))))}),{immediate:!0,flush:"post"}),m=()=>{d(),c()};return n(m),m}function h(e){const t=function(){const e=l(!1);return c()&&d((()=>{e.value=!0})),e}();return u((()=>(t.value,Boolean(e()))))}function w(e,t={}){const{reset:r=!0,windowResize:o=!0,windowScroll:a=!0,immediate:i=!0}=t,c=l(0),d=l(0),w=l(0),y=l(0),b=l(0),g=l(0),A=l(0),O=l(0);function x(){const t=f(e);if(!t)return void(r&&(c.value=0,d.value=0,w.value=0,y.value=0,b.value=0,g.value=0,A.value=0,O.value=0));const n=t.getBoundingClientRect();c.value=n.height,d.value=n.bottom,w.value=n.left,y.value=n.right,b.value=n.top,g.value=n.width,A.value=n.x,O.value=n.y}return function(e,t,r={}){const{window:o=p,...s}=r;let a;const i=h((()=>o&&"ResizeObserver"in o)),l=()=>{a&&(a.disconnect(),a=void 0)},c=u((()=>Array.isArray(e)?e.map((e=>f(e))):[f(e)])),d=v(c,(e=>{if(l(),i.value&&o){a=new ResizeObserver(t);for(const t of e)t&&a.observe(t,s)}}),{immediate:!0,flush:"post",deep:!0}),m=()=>{l(),d()};n(m)}(e,x),v((()=>f(e)),(e=>!e&&x())),function(e,t,r={}){const{window:o=p,...s}=r;let a;const i=h((()=>o&&"MutationObserver"in o)),u=()=>{a&&(a.disconnect(),a=void 0)},l=v((()=>f(e)),(e=>{u(),i.value&&o&&e&&(a=new MutationObserver(t),a.observe(e,s))}),{immediate:!0}),c=()=>{u(),l()};n(c)}(e,x,{attributeFilter:["style","class"]}),a&&m("scroll",x,{capture:!0,passive:!0}),o&&m("resize",x,{passive:!0}),s((()=>{i&&x()})),{height:c,bottom:d,left:w,right:y,top:b,width:g,x:A,y:O,update:x}}function y(o,s,a={}){const{root:i,rootMargin:c="0px",threshold:d=.1,window:m=p,immediate:w=!0}=a,y=h((()=>m&&"IntersectionObserver"in m)),b=u((()=>{const r=e(o);return(Array.isArray(r)?r:[r]).map(f).filter(t)}));let g=r;const A=l(w),O=y.value?v((()=>[b.value,f(i),A.value]),(([e,t])=>{if(g(),!A.value)return;if(!e.length)return;const n=new IntersectionObserver(s,{root:f(t),rootMargin:c,threshold:d});e.forEach((e=>e&&n.observe(e))),g=()=>{n.disconnect(),g=r}}),{immediate:w,flush:"post"}):r,x=()=>{g(),O(),A.value=!1};return n(x),{isSupported:y,isActive:A,pause(){g(),A.value=!1},resume(){A.value=!0},stop:x}}export{y as a,w as u};